version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: shopped
      MONGODB_USERNAME: shopped
      MONGODB_PASSWORD: shopped
      MONGO_INITDB_DATABASE: shopped
    volumes:
      - ./docker/mongo/data:/data/db
      - ./docker/mongo/init.d:/docker-entrypoint-initdb.d
    networks:
      shopped:
        ipv4_address: 172.168.8.4

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: shopped
    networks:
      shopped:
        ipv4_address: 172.168.8.5

  backend:
    image: node:12.13.1
    container_name: backend
    expose:
      - 3005
    environment:
      PORT: 3005
      env: development
      MONGO_HOST: mongo
    depends_on:
      - mongo
    user: node
    volumes:
      - ./backend:/home/node/app
    working_dir: /home/node/app
    command: npm start
    networks:
      shopped:
        ipv4_address: 172.168.8.11

  frontend:
    image: node:12.13.1
    container_name: frotend
    expose:
      - 3000
    environment:
      PORT: 3000
      env: development
      BACKEND_URL: backend
    depends_on:
      - backend
    user: node
    volumes:
      - ./frontend:/home/node/app
    working_dir: /home/node/app
    command: npm start
    networks:
      shopped:
        ipv4_address: 172.168.8.12

networks:
  shopped:
    ipam:
      driver: default
      config:
        - subnet: 172.168.8.0/24